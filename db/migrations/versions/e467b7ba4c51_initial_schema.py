"""initial_schema

Revision ID: e467b7ba4c51
Revises: 
Create Date: 2025-09-07 14:43:48.623807

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e467b7ba4c51'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analyses',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('total_components', sa.Integer(), nullable=True),
    sa.Column('total_threats', sa.Integer(), nullable=True),
    sa.Column('critical_components', sa.Integer(), nullable=True),
    sa.Column('high_risk_threats', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('analyses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_analyses_id'), ['id'], unique=False)

    op.create_table('risk_frameworks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('framework_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('impact_definitions', sa.JSON(), nullable=False),
    sa.Column('likelihood_definitions', sa.JSON(), nullable=False),
    sa.Column('risk_matrix', sa.JSON(), nullable=False),
    sa.Column('risk_thresholds', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('risk_frameworks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_risk_frameworks_framework_id'), ['framework_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_risk_frameworks_id'), ['id'], unique=False)

    op.create_table('system_scopes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scope_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('system_type', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('boundaries', sa.JSON(), nullable=True),
    sa.Column('objectives', sa.JSON(), nullable=True),
    sa.Column('stakeholders', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('system_scopes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_system_scopes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_system_scopes_scope_id'), ['scope_id'], unique=True)

    op.create_table('vulnerabilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vulnerability_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('cvss_score', sa.Float(), nullable=True),
    sa.Column('cvss_vector', sa.String(), nullable=True),
    sa.Column('affected_components', sa.JSON(), nullable=True),
    sa.Column('attack_vector', sa.String(), nullable=True),
    sa.Column('attack_complexity', sa.String(), nullable=True),
    sa.Column('privileges_required', sa.String(), nullable=True),
    sa.Column('user_interaction', sa.String(), nullable=True),
    sa.Column('scope', sa.String(), nullable=True),
    sa.Column('confidentiality_impact', sa.String(), nullable=True),
    sa.Column('integrity_impact', sa.String(), nullable=True),
    sa.Column('availability_impact', sa.String(), nullable=True),
    sa.Column('exploitability_score', sa.Float(), nullable=True),
    sa.Column('impact_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vulnerabilities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vulnerabilities_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vulnerabilities_vulnerability_id'), ['vulnerability_id'], unique=True)

    op.create_table('components',
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('safety_level', sa.String(), nullable=False),
    sa.Column('interfaces', sa.JSON(), nullable=True),
    sa.Column('access_points', sa.JSON(), nullable=True),
    sa.Column('data_types', sa.JSON(), nullable=True),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('trust_zone', sa.String(), nullable=False),
    sa.Column('confidentiality', sa.String(), nullable=True),
    sa.Column('integrity', sa.String(), nullable=True),
    sa.Column('availability', sa.String(), nullable=True),
    sa.Column('authenticity_required', sa.Boolean(), nullable=True),
    sa.Column('authorization_required', sa.Boolean(), nullable=True),
    sa.Column('scope_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['scope_id'], ['system_scopes.scope_id'], ),
    sa.PrimaryKeyConstraint('component_id')
    )
    with op.batch_alter_table('components', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_components_component_id'), ['component_id'], unique=False)

    op.create_table('reports',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('analysis_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('format', sa.String(), nullable=False),
    sa.Column('report_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.Column('error_info', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reports_analysis_id'), ['analysis_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reports_id'), ['id'], unique=False)

    op.create_table('vulnerability_cve_mapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vulnerability_id', sa.String(), nullable=False),
    sa.Column('cve_id', sa.String(), nullable=False),
    sa.Column('cve_description', sa.Text(), nullable=True),
    sa.Column('published_date', sa.DateTime(), nullable=True),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('cvss_version', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['vulnerability_id'], ['vulnerabilities.vulnerability_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vulnerability_cve_mapping', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vulnerability_cve_mapping_id'), ['id'], unique=False)

    op.create_table('vulnerability_cwe_mapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vulnerability_id', sa.String(), nullable=False),
    sa.Column('cwe_id', sa.String(), nullable=False),
    sa.Column('cwe_name', sa.String(), nullable=True),
    sa.Column('cwe_description', sa.Text(), nullable=True),
    sa.Column('relationship_type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['vulnerability_id'], ['vulnerabilities.vulnerability_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vulnerability_cwe_mapping', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vulnerability_cwe_mapping_id'), ['id'], unique=False)

    op.create_table('vulnerability_mitigations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mitigation_id', sa.String(), nullable=True),
    sa.Column('vulnerability_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('mitigation_type', sa.String(), nullable=True),
    sa.Column('effectiveness', sa.String(), nullable=True),
    sa.Column('implementation_cost', sa.String(), nullable=True),
    sa.Column('implementation_time', sa.String(), nullable=True),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['vulnerability_id'], ['vulnerabilities.vulnerability_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vulnerability_mitigations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vulnerability_mitigations_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vulnerability_mitigations_mitigation_id'), ['mitigation_id'], unique=True)

    op.create_table('component_analyses',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('analysis_id', sa.String(), nullable=True),
    sa.Column('component_id', sa.String(), nullable=True),
    sa.Column('threats', sa.JSON(), nullable=True),
    sa.Column('stride_analysis', sa.JSON(), nullable=True),
    sa.Column('compliance', sa.JSON(), nullable=True),
    sa.Column('feasibility_assessments', sa.JSON(), nullable=True),
    sa.Column('risk_acceptance', sa.JSON(), nullable=True),
    sa.Column('attack_paths', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.id'], ),
    sa.ForeignKeyConstraint(['component_id'], ['components.component_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('component_analyses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_component_analyses_analysis_id'), ['analysis_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_component_analyses_component_id'), ['component_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_component_analyses_id'), ['id'], unique=False)

    op.create_table('component_connections',
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('connected_to_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['component_id'], ['components.component_id'], ),
    sa.ForeignKeyConstraint(['connected_to_id'], ['components.component_id'], ),
    sa.PrimaryKeyConstraint('component_id', 'connected_to_id')
    )
    op.create_table('damage_scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('damage_category', sa.String(), nullable=False),
    sa.Column('impact_type', sa.String(), nullable=False),
    sa.Column('confidentiality_impact', sa.Boolean(), nullable=True),
    sa.Column('integrity_impact', sa.Boolean(), nullable=True),
    sa.Column('availability_impact', sa.Boolean(), nullable=True),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('impact_details', sa.JSON(), nullable=True),
    sa.Column('safety_impact', sa.String(), nullable=True),
    sa.Column('financial_impact', sa.String(), nullable=True),
    sa.Column('operational_impact', sa.String(), nullable=True),
    sa.Column('privacy_impact', sa.String(), nullable=True),
    sa.Column('impact_rating_notes', sa.Text(), nullable=True),
    sa.Column('sfop_rating_auto_generated', sa.Boolean(), nullable=False),
    sa.Column('sfop_rating_last_edited_by', sa.String(), nullable=True),
    sa.Column('sfop_rating_last_edited_at', sa.DateTime(), nullable=True),
    sa.Column('sfop_rating_override_reason', sa.Text(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('revision_notes', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('scope_id', sa.String(), nullable=False),
    sa.Column('primary_component_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['primary_component_id'], ['components.component_id'], ),
    sa.ForeignKeyConstraint(['scope_id'], ['system_scopes.scope_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('damage_scenarios', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_damage_scenarios_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_damage_scenarios_scenario_id'), ['scenario_id'], unique=True)

    op.create_table('review_decisions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('analysis_id', sa.String(), nullable=True),
    sa.Column('component_id', sa.String(), nullable=True),
    sa.Column('threat_id', sa.String(), nullable=False),
    sa.Column('original_decision', sa.String(), nullable=False),
    sa.Column('final_decision', sa.String(), nullable=False),
    sa.Column('reviewer', sa.String(), nullable=False),
    sa.Column('justification', sa.Text(), nullable=False),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('review_date', sa.String(), nullable=False),
    sa.Column('evidence_references', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.id'], ),
    sa.ForeignKeyConstraint(['component_id'], ['components.component_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('review_decisions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_review_decisions_analysis_id'), ['analysis_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_review_decisions_component_id'), ['component_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_review_decisions_id'), ['id'], unique=False)

    op.create_table('vulnerability_assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.String(), nullable=True),
    sa.Column('analysis_id', sa.String(), nullable=False),
    sa.Column('component_id', sa.String(), nullable=False),
    sa.Column('vulnerability_id', sa.String(), nullable=False),
    sa.Column('likelihood', sa.Integer(), nullable=False),
    sa.Column('impact', sa.JSON(), nullable=True),
    sa.Column('risk_level', sa.String(), nullable=False),
    sa.Column('mitigation_status', sa.String(), nullable=True),
    sa.Column('mitigation_notes', sa.Text(), nullable=True),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('detection_method', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.id'], ),
    sa.ForeignKeyConstraint(['component_id'], ['components.component_id'], ),
    sa.ForeignKeyConstraint(['vulnerability_id'], ['vulnerabilities.vulnerability_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vulnerability_assessments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vulnerability_assessments_assessment_id'), ['assessment_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_vulnerability_assessments_id'), ['id'], unique=False)

    op.create_table('component_damage_scenario',
    sa.Column('component_id', sa.String(), nullable=True),
    sa.Column('scenario_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['components.component_id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['damage_scenarios.scenario_id'], ),
    sa.UniqueConstraint('component_id', 'scenario_id', name='uq_component_damage_scenario')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('component_damage_scenario')
    with op.batch_alter_table('vulnerability_assessments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vulnerability_assessments_id'))
        batch_op.drop_index(batch_op.f('ix_vulnerability_assessments_assessment_id'))

    op.drop_table('vulnerability_assessments')
    with op.batch_alter_table('review_decisions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_review_decisions_id'))
        batch_op.drop_index(batch_op.f('ix_review_decisions_component_id'))
        batch_op.drop_index(batch_op.f('ix_review_decisions_analysis_id'))

    op.drop_table('review_decisions')
    with op.batch_alter_table('damage_scenarios', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_damage_scenarios_scenario_id'))
        batch_op.drop_index(batch_op.f('ix_damage_scenarios_id'))

    op.drop_table('damage_scenarios')
    op.drop_table('component_connections')
    with op.batch_alter_table('component_analyses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_component_analyses_id'))
        batch_op.drop_index(batch_op.f('ix_component_analyses_component_id'))
        batch_op.drop_index(batch_op.f('ix_component_analyses_analysis_id'))

    op.drop_table('component_analyses')
    with op.batch_alter_table('vulnerability_mitigations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vulnerability_mitigations_mitigation_id'))
        batch_op.drop_index(batch_op.f('ix_vulnerability_mitigations_id'))

    op.drop_table('vulnerability_mitigations')
    with op.batch_alter_table('vulnerability_cwe_mapping', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vulnerability_cwe_mapping_id'))

    op.drop_table('vulnerability_cwe_mapping')
    with op.batch_alter_table('vulnerability_cve_mapping', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vulnerability_cve_mapping_id'))

    op.drop_table('vulnerability_cve_mapping')
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reports_id'))
        batch_op.drop_index(batch_op.f('ix_reports_analysis_id'))

    op.drop_table('reports')
    with op.batch_alter_table('components', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_components_component_id'))

    op.drop_table('components')
    with op.batch_alter_table('vulnerabilities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vulnerabilities_vulnerability_id'))
        batch_op.drop_index(batch_op.f('ix_vulnerabilities_id'))

    op.drop_table('vulnerabilities')
    with op.batch_alter_table('system_scopes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_system_scopes_scope_id'))
        batch_op.drop_index(batch_op.f('ix_system_scopes_id'))

    op.drop_table('system_scopes')
    with op.batch_alter_table('risk_frameworks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_risk_frameworks_id'))
        batch_op.drop_index(batch_op.f('ix_risk_frameworks_framework_id'))

    op.drop_table('risk_frameworks')
    with op.batch_alter_table('analyses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_analyses_id'))

    op.drop_table('analyses')
    # ### end Alembic commands ###
