"""
Add vulnerability table for vulnerability assessment

Revision ID: c2e7d4f8b3a6
Revises: b1e9c3d7a2f5
Create Date: 2025-04-26 10:55:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = 'c2e7d4f8b3a6'
down_revision = 'b1e9c3d7a2f5'
branch_labels = None
depends_on = None


def upgrade():
    # Create vulnerabilities table
    op.create_table(
        'vulnerabilities',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('vulnerability_id', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('vulnerability_type', sa.String(), nullable=False),
        sa.Column('severity', sa.String(), nullable=False),
        sa.Column('component_id', sa.String(), nullable=False),
        sa.Column('cve_id', sa.String(), nullable=True),
        sa.Column('cwe_id', sa.String(), nullable=True),
        sa.Column('affected_interfaces', sa.JSON(), nullable=True),
        sa.Column('attack_vector', sa.String(), nullable=False),
        sa.Column('exploit_status', sa.String(), nullable=False),
        sa.Column('remediation', sa.Text(), nullable=False),
        sa.Column('cvss_score', sa.Float(), nullable=True),
        sa.Column('references', sa.JSON(), nullable=True),
        sa.Column('verified', sa.Boolean(), nullable=False, default=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('scope_id', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['component_id'], ['components.component_id']),
        sa.ForeignKeyConstraint(['scope_id'], ['system_scopes.scope_id'])
    )
    
    # Create indexes
    op.create_index(op.f('ix_vulnerabilities_id'), 'vulnerabilities', ['id'], unique=False)
    op.create_index(op.f('ix_vulnerabilities_vulnerability_id'), 'vulnerabilities', ['vulnerability_id'], unique=True)
    op.create_index(op.f('ix_vulnerabilities_component_id'), 'vulnerabilities', ['component_id'], unique=False)
    op.create_index(op.f('ix_vulnerabilities_scope_id'), 'vulnerabilities', ['scope_id'], unique=False)


def downgrade():
    # Drop vulnerabilities table
    op.drop_index(op.f('ix_vulnerabilities_scope_id'), table_name='vulnerabilities')
    op.drop_index(op.f('ix_vulnerabilities_component_id'), table_name='vulnerabilities')
    op.drop_index(op.f('ix_vulnerabilities_vulnerability_id'), table_name='vulnerabilities')
    op.drop_index(op.f('ix_vulnerabilities_id'), table_name='vulnerabilities')
    op.drop_table('vulnerabilities')
