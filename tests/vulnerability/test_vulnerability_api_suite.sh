#!/bin/bash
# Vulnerability Assessment API Test Commands

# 1. Get all vulnerabilities (should be empty initially)
echo "Testing GET /api/vulnerability - List all vulnerabilities"
curl -X GET "http://localhost:8080/api/vulnerability" -H "accept: application/json"
echo -e "\n"

# 2. Create a new vulnerability
echo "Testing POST /api/vulnerability - Create a new vulnerability"
curl -X POST "http://localhost:8080/api/vulnerability" \
  -H "Content-Type: application/json" \
  -H "accept: application/json" \
  -d '{
    "title": "Insecure CAN Bus Implementation",
    "description": "The CAN bus implementation does not include authentication or encryption.",
    "vulnerability_type": "Design",
    "severity": "High",
    "component_id": "ECU001",
    "cwe_id": "CWE-287",
    "affected_interfaces": ["CAN"],
    "attack_vector": "CAN Bus",
    "exploit_status": "Functional",
    "remediation": "Implement secure authentication for all CAN messages.",
    "cvss_score": 7.5,
    "references": ["https://cwe.mitre.org/data/definitions/287.html"],
    "verified": false,
    "scope_id": null
  }'
echo -e "\n"

# 3. Get a specific vulnerability by ID (replace VULN-ID with an actual ID after creation)
echo "Testing GET /api/vulnerability/{vulnerability_id} - Get a specific vulnerability"
# Uncomment and replace VULN-ID with the ID returned from the POST request
# curl -X GET "http://localhost:8080/api/vulnerability/VULN-ID" -H "accept: application/json"
# echo -e "\n"

# 4. Update an existing vulnerability (replace VULN-ID with an actual ID)
echo "Testing PUT /api/vulnerability/{vulnerability_id} - Update a vulnerability"
# Uncomment and replace VULN-ID with the ID returned from the POST request
# curl -X PUT "http://localhost:8080/api/vulnerability/VULN-ID" \
#   -H "Content-Type: application/json" \
#   -H "accept: application/json" \
#   -d '{
#     "severity": "Critical",
#     "verified": true,
#     "cvss_score": 9.5
#   }'
# echo -e "\n"

# 5. Perform vulnerability assessment on components
echo "Testing POST /api/vulnerability/assess - Assess vulnerabilities in components"
curl -X POST "http://localhost:8080/api/vulnerability/assess" \
  -H "Content-Type: application/json" \
  -H "accept: application/json" \
  -d '["ECU001", "SENSOR001"]'
echo -e "\n"

# 6. Filter vulnerabilities by component_id
echo "Testing GET /api/vulnerability?component_id=ECU001 - Filter vulnerabilities by component"
curl -X GET "http://localhost:8080/api/vulnerability?component_id=ECU001" -H "accept: application/json"
echo -e "\n"

# 7. Filter vulnerabilities by severity
echo "Testing GET /api/vulnerability?severity=High - Filter vulnerabilities by severity"
curl -X GET "http://localhost:8080/api/vulnerability?severity=High" -H "accept: application/json"
echo -e "\n"

# 8. Delete a vulnerability (replace VULN-ID with an actual ID)
echo "Testing DELETE /api/vulnerability/{vulnerability_id} - Delete a vulnerability"
# Uncomment and replace VULN-ID with the ID returned from the POST request
# curl -X DELETE "http://localhost:8080/api/vulnerability/VULN-ID" -H "accept: application/json"
# echo -e "\n"

echo "All tests completed."
