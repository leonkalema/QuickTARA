#!/usr/bin/env python3
"""
Quick fix for vulnerability models and setup
"""
import sys
from pathlib import Path

# Add the project root to Python path
project_root = Path(__file__).parent
sys.path.append(str(project_root))

from db.session import get_session_factory, get_engine, init_db
from config.settings import load_settings
from sqlalchemy import text
import subprocess

def main():
    """Fix vulnerability setup issues"""
    try:
        # Load settings
        settings = load_settings()
        
        # Initialize database
        init_db(settings)
        
        print("Database initialized - checking for vulnerability tables...")
        
        # Try to clean up any existing tables if they exist
        engine = get_engine()
        with engine.connect() as conn:
            # Get table names
            result = conn.execute(text("SELECT name FROM sqlite_master WHERE type='table';"))
            tables = [row[0] for row in result]
            
            if 'vulnerabilities' in tables:
                print("Vulnerability tables already exist, checking structure...")
            else:
                print("Vulnerability tables don't exist, creating them...")
        
        # Run migrations
        try:
            result = subprocess.run(
                ['alembic', 'upgrade', 'head'],
                capture_output=True,
                text=True
            )
            if result.returncode == 0:
                print("Migrations applied successfully")
                print(result.stdout)
            else:
                print("Migration errors (this is usually okay if tables exist):")
                print(result.stderr)
        except Exception as e:
            print(f"Migration command failed: {e}")
            print("This is usually okay if tables already exist")
        
        print("\nTesting if application can start...")
        try:
            from api.app import create_app
            app = create_app(settings)
            print("✓ Application can be created without errors")
            
            # Test vulnerability routes are added
            routes = [route.path for route in app.routes]
            vulnerability_routes = [route for route in routes if "/api/vulnerability" in route]
            
            if vulnerability_routes:
                print(f"✓ Vulnerability routes found: {len(vulnerability_routes)}")
            else:
                print("✗ No vulnerability routes found")
            
            print("\nApplication setup completed successfully!")
            print("You can now run: python quicktara_web.py --debug")
            
        except Exception as e:
            print(f"✗ Error creating application: {e}")
            raise
        
    except Exception as e:
        print(f"Error fixing vulnerability setup: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()
