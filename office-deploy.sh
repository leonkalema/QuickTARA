#!/bin/bash
set -e

echo "🚀 QuickTARA Office Deployment Script"
echo "======================================"

# Configuration
FRONTEND_PORT=${FRONTEND_PORT:-4173}
API_PORT=${API_PORT:-8080}

# Get local IP for LAN access
get_lan_ip() {
  if command -v ipconfig >/dev/null 2>&1; then
    ipconfig getifaddr en0 2>/dev/null || ipconfig getifaddr en1 2>/dev/null || echo "0.0.0.0"
  elif command -v hostname >/dev/null 2>&1; then
    hostname -I 2>/dev/null | awk '{print $1}'
  else
    echo "0.0.0.0"
  fi
}
LAN_IP="$(get_lan_ip)"

echo "📍 Detected LAN IP: $LAN_IP"
echo ""

# Check prerequisites
echo "🔍 Checking prerequisites..."

if ! command -v python3 &> /dev/null; then
    echo "❌ Python 3 not found. Please install Python 3.8+"
    exit 1
fi

if ! command -v node &> /dev/null; then
    echo "❌ Node.js not found. Please install Node.js 16+"
    exit 1
fi

if ! command -v npm &> /dev/null; then
    echo "❌ npm not found. Please install npm"
    exit 1
fi

echo "✅ Prerequisites OK"
echo ""

# Clone or update repository
if [ -d "QuickTARA" ]; then
    echo "📁 Updating existing QuickTARA..."
    cd QuickTARA
    git pull
else
    echo "📥 Cloning QuickTARA..."
    git clone https://github.com/leonkalema/QuickTARA.git
    cd QuickTARA
fi

echo ""

# Create virtual environment
echo "🐍 Setting up Python environment..."
if [ ! -d ".venv" ]; then
    python3 -m venv .venv
fi

# Activate virtual environment
source .venv/bin/activate

# Install Python dependencies
echo "📦 Installing Python dependencies..."
pip install -r requirements.txt

echo ""

# Build and start frontend
echo "🧩 Building QuickTARA frontend..."
if [ -d "tara-web" ]; then
  cd tara-web
  
  # Create .env file for frontend API connection
  echo "⚙️  Configuring frontend environment..."
  cat > .env << EOF
# Auto-generated by QuickTARA installer
VITE_API_BASE_URL="http://localhost:${API_PORT}/api"
EOF
  
  npm install --silent
  npm run build --silent
  echo "🌐 Starting QuickTARA frontend..."
  nohup npm run preview -- --host 0.0.0.0 --port "${FRONTEND_PORT}" > "$HOME/quicktara-frontend.log" 2>&1 &
  FRONTEND_PID=$!
  cd ..
  echo "Frontend started with PID: $FRONTEND_PID"
else
  echo "⚠️ 'tara-web' directory not found. Skipping frontend."
  FRONTEND_PID=""
fi

echo ""

# Create default SQLite database (no config needed)
echo "🗄️  Setting up database..."
if [ ! -f "quicktara.db" ]; then
    python quicktara_web.py --db ./quicktara.db --host 127.0.0.1 --port ${API_PORT} &
    SERVER_PID=$!
    sleep 5
    kill $SERVER_PID 2>/dev/null || true
    echo "✅ Database initialized"
fi

echo ""
echo "🎉 Setup complete!"
echo ""
echo "🚀 QuickTARA is starting..."
echo "   🖥️  Backend (API):"
echo "      • Local:  http://localhost:${API_PORT}"
echo "      • LAN:    http://${LAN_IP}:${API_PORT}"
if [ -n "${FRONTEND_PID:-}" ]; then
  echo "   🌐 Frontend (SvelteKit preview):"
  echo "      • Local:  http://localhost:${FRONTEND_PORT}"
  echo "      • LAN:    http://${LAN_IP}:${FRONTEND_PORT}"
  echo "      (log: $HOME/quicktara-frontend.log)"
else
  echo "   🌐 Frontend: Not started (tara-web missing)"
fi
echo ""
echo "Press Ctrl+C to stop the backend server."
echo ""

# Start server with LAN access
python quicktara_web.py --host 0.0.0.0 --port ${API_PORT}
